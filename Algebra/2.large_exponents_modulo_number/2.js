/*
My Implementation is much faster than that of below pages

http://home.sandiego.edu/~cparker/old_classes/math370_sp18/powermod.html 
and
https://planetcalc.com/8979/

Comparison with Sandiego University Implementation (this is o far best i knew)

for base = exponent = n = x ; where x is 864 digit long and repetitions of 123456789
x = 
1234567891234567891234567891234567891234567891234567891234567891234567891234567891234
56789123456789123456789123456789123456789123456789123456789123456789123456789123456789
12345678912345678912345678912345678912345678912345678912345678912345678912345678912345
67891234567891234567891234567891234567891234567891234567891234567891234567891234567891
23456789123456789123456789123456789123456789123456789123456789123456789123456789123456
789123456789123456789123456789123456789123456789123456789123456789123456789123456789123
456789123456789123456789123456789123456789123456789123456789123456789123456789123456789
123456789123456789123456789123456789123456789123456789123456789123456789123456789123456
789123456789123456789123456789123456789123456789123456789123456789123456789123456789123
456789123456789123456789123456789123456789123456789123456789123456789123456789123456789

Time taken by Uni of Sandiego Code = 0.446 seconds
Time taken by My Code              = 0.005 seconds


Let's double the digit length in x,
let digits in y = 2 * digits in x = 1728 digits

Time taken by Uni of Sandiego Code = 3.68 seconds
Time taken by My Code              = 0.007 - 0.01 seconds


y = 
12345678912345678912345678912345678912345678912345678912345678912345678912345678912
345678912345678912345678912345678912345678912345678912345678912345678912345678912345678
912345678912345678912345678912345678912345678912345678912345678912345678912345678912345
678912345678912345678912345678912345678912345678912345678912345678912345678912345678912
345678912345678912345678912345678912345678912345678912345678912345678912345678912345678
912345678912345678912345678912345678912345678912345678912345678912345678912345678912345
678912345678912345678912345678912345678912345678912345678912345678912345678912345678912
345678912345678912345678912345678912345678912345678912345678912345678912345678912345678
912345678912345678912345678912345678912345678912345678912345678912345678912345678912345
678912345678912345678912345678912345678912345678912345678912345678912345678912345678912
3456789123456789123456789123456789123456789123456789123456789123456789123456789123456789
1234567891234567891234567891234567891234567891234567891234567891234567891234567891234567
8912345678912345678912345678912345678912345678912345678912345678912345678912345678912345
6789123456789123456789123456789123456789123456789123456789123456789123456789123456789123
4567891234567891234567891234567891234567891234567891234567891234567891234567891234567891
2345678912345678912345678912345678912345678912345678912345678912345678912345678912345678
91234567891234567891234567891234567891234567891234567891234567891234567891234567891234567
89123456789123456789123456789123456789123456789123456789123456789123456789123456789123456
78912345678912345678912345678912345678912345678912345678912345678912345678912345678912345
6789123456789123456789123456789123456789123456789123456789123456789

*/

/*

Recognize the parts in 1.js which are restricting big number arithematic
and solve it using algorithm rather than data structure

Hint: Make use of modulo operator OR try to squishify the big numbers in a way that result is unaffected

*/

const pow_mod = (base, exp, n) => {
  if (n == 0n) {
    return 'Undefined'
  }

  let res = -2

  res = base == 1n || exp == 0n ? 1n : base == -1n ? (exp & 1n ? -1n : 1n) : res

  if (res != -2) {
    return res % n
  }

  res = 1n

  let is_neg
  if (exp < 0n) {
    is_neg = 1
    exp = -exp
  }

  base %= n
  while (exp != 0n) {
    if (exp & 1n) {
      res = ((res % n) * (base % n)) % n
    }
    exp >>= 1n
    base = ((base % n) * (base % n)) % n
  }

  if (is_neg) {
    return 1n / res
  }

  return res
}


// let bn
// let en
// let nn

let b = 2n
let e = 41n
let n = 83n
let start = Date.now()
console.log(pow_mod((base = b), (exp = e), (n = n)))
// console.log(Date.now() - start)

